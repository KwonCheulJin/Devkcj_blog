{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/SpringMVC",
    "result": {"pageContext":{"currentCategory":"SpringMVC","categories":["All","CleanCode","나의생각","TDD","JUnit","오늘의기록","SpringBoot","SpringMVC","블로그"],"edges":[{"node":{"id":"b9f3653b-ac09-50dd-a295-4762100c0b3c","excerpt":"오늘은 회사에서 VCMS 프로토타입 개발 진행을 하게되어서 처음으로 AWS RDS MariaDB에 연동하는 작업을 진행하였다. DB 쿼리 작업을 수월하게 도와주는 Mybatis도 이용하였다. 설정하는 과정 중에 겪었던 문제점을 잊지 않기 위해서 기록한다. 1. DB 연동하기 에서 DB 설정 및 Mybatis 설정을 해준다. 내가 사용에 필요한 부분을 설정해주었다. 2. DB 연동 TEST test를 통해서 db와 연결되는지 확인을 한다. 3. Mybatis 사용을 위한 Entity / Repository class 추가  Member 클래스 레벨에서  어노테이션을 붙여주면, 모든 필드를 대상으로 접근자와 설정자가 자동으로 생성되고,  또는  필드 값을 파라미터로 받는 생성자가 만들어지며, , ,  메소드가 자동으로 만들어진다.  MemberRepository 는 MyBatis의 mappers를 위한 marker interface로 사용 4. Mybatis  설정  가 이전버전에서는…","fields":{"slug":"/gatsby-springMVC-2/"},"frontmatter":{"categories":"SpringMVC","title":"Spring Boot + Mybatis + MariaDB 연결하기","date":"October 06, 2021"}},"next":{"fields":{"slug":"/gatsby-springMVC-1/"}},"previous":{"fields":{"slug":"/gatsby-today-record-1/"}}},{"node":{"id":"18fc7194-db5e-5a2d-9a24-39575c944505","excerpt":"오늘은 인프런의 김영한님 스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술을 마무리하였다. 매일 1~2시간씩 끊어가면서 강의를 듣다보니 배울 때만 기억나고 다시 들을때는 전에 배웠던 내용이 잘 기억나지는 않는다. 시간내서 전체를 다시 한번 들어봐야겠다. 강의 내용 중 마지막 내용인 PRG(Post/Redirect/Get)에 대해서 글을 남긴다. 1. PRG(Post/Redirect/Get) 적용 전 상품을 등록하고 나서 아래의 경로로 이동하게 되었을 때의 문제점은 새로고침을 하게 되면 상품이 지속적으로 등록이 된다는 것이다.  form-post-redirectX.gif gif로 변환을 하다보니 해상도가 좋지는 않은데 상품ID가 새로고침 할 때 마다 올라가는 것을 확인 할 수 있다. 이렇게 마무리가 되면 사용자가 실수로 새로고침을 눌렀을 경우에 똑같은 상품이 계속 저장되게 된다. 그래서 이렇게 저장되지 않도록 해주는 방법이 PRG(Post/Redirect/Get)이다. 2. PRG(…","fields":{"slug":"/gatsby-springMVC-1/"},"frontmatter":{"categories":"SpringMVC","title":"PRG (Post/Redirect/Get)","date":"October 05, 2021"}},"next":{"fields":{"slug":"/gatsby-java-til/"}},"previous":{"fields":{"slug":"/gatsby-springMVC-2/"}}},{"node":{"id":"38adf2af-03e9-56e8-9dca-5466232ff396","excerpt":"VCMS(Video Content Management System) 프로젝트를 진행하게 되어서\n이사님께서 Spring version 4로 만들어 주신 기본폴더를 이용해서 간단하게 추가해 진행을 해보았다. 1. 파일업로드를 위한  설정 fileupload에 필요한 pom.xml에 dependency를 추가하는 작업을 하였습니다.  2. 에  등록 Multipart 지원 기능을 이용하려면 먼저 MultipartResolver를 스프링 설정 파일에 등록해 주어야 합니다 MultipartResolver는 Multipart 형식으로 데이터가 전송된 경우, 해당 데이터를 스프링 MVC에서 사용할 수 있도록 변환해줍니다.  3. 에  적용 이름 타입 필수 설명 fileSizeThreshold int Optional 업로드 파일을 임시로 저장할 때 크기 임계값을 지정합니다. 업로드 파일의 크기가 이 임계값보다 크면 디스크에 저장됩니다. 그렇지 않으면 파일이 메모리에 저장됩니다. 크기(바이트)입니…","fields":{"slug":"/gatsby-java-til/"},"frontmatter":{"categories":"SpringMVC","title":"Spring MVC를 이용한 간단한 파일업로드","date":"September 28, 2021"}},"next":{"fields":{"slug":"/gatsby-first-blog-contents/"}},"previous":{"fields":{"slug":"/gatsby-springMVC-1/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}