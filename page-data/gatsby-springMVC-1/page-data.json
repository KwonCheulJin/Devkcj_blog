{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/gatsby-springMVC-1/",
    "result": {"data":{"cur":{"id":"18fc7194-db5e-5a2d-9a24-39575c944505","html":"<p>오늘은 인프런의 김영한님 <a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1/dashboard\">스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술</a>을 마무리하였다.</p>\n<p>매일 1~2시간씩 끊어가면서 강의를 듣다보니 배울 때만 기억나고 다시 들을때는 전에 배웠던 내용이 잘 기억나지는 않는다.</p>\n<p>시간내서 전체를 다시 한번 들어봐야겠다.</p>\n<p>강의 내용 중 마지막 내용인 PRG(Post/Redirect/Get)에 대해서 글을 남긴다.</p>\n<h2 id=\"1-prgpostredirectget-적용-전\" style=\"position:relative;\"><a href=\"#1-prgpostredirectget-%EC%A0%81%EC%9A%A9-%EC%A0%84\" aria-label=\"1 prgpostredirectget 적용 전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. PRG(Post/Redirect/Get) 적용 전</h2>\n<ul>\n<li>상품을 등록하고 나서 아래의 경로로 이동하게 되었을 때의 문제점은 새로고침을 하게 되면 상품이 지속적으로 등록이 된다는 것이다.</li>\n</ul>\n<p><code class=\"language-text\">BasicItemController.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/add\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">addItemV4</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    itemRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"basic/item\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div align = \"center\">\n<p><img src=\"/a43d2ee9def31c50243a01794f8a89c0/form-post-redirectX.gif\" alt=\"form-post-redirectX.gif\"></p>\n</div>\n<ul>\n<li>gif로 변환을 하다보니 해상도가 좋지는 않은데 상품ID가 새로고침 할 때 마다 올라가는 것을 확인 할 수 있다.</li>\n<li>이렇게 마무리가 되면 사용자가 실수로 새로고침을 눌렀을 경우에 똑같은 상품이 계속 저장되게 된다.</li>\n<li>그래서 이렇게 저장되지 않도록 해주는 방법이 PRG(Post/Redirect/Get)이다.</li>\n</ul>\n<h2 id=\"2-prgpostredirectget-적용-후\" style=\"position:relative;\"><a href=\"#2-prgpostredirectget-%EC%A0%81%EC%9A%A9-%ED%9B%84\" aria-label=\"2 prgpostredirectget 적용 후 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. PRG(Post/Redirect/Get) 적용 후</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/add\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">addItemV5</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    itemRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"redirect:/basic/items/\"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/add\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">addItemV6</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RedirectAttributes</span> redirectAttributes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Item</span> savedItem <span class=\"token operator\">=</span> itemRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    redirectAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itemId\"</span><span class=\"token punctuation\">,</span> savedItem<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    redirectAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"redirect:/basic/items/{itemId}\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>두 가지 방법으로 적용을 시켜보았는데 첫번째 방법으로는 사용하지 않는 것이 좋다.</li>\n<li><code class=\"language-text\">return</code>할 때 연산자로 값을 넣어줬을 경우에는 숫자의 경우는 상관없지만 문자가 들어가는 경우에는 인코딩 문제가 발생할 수 있다.</li>\n<li>그래서 두번째 방법으로 <code class=\"language-text\">RedirectAttribute</code>를 사용하게되면 인코딩도 해결하고 추가 <code class=\"language-text\">Parameter</code>까지 전송이 가능하게 된다.</li>\n</ul>\n<div align = \"center\">\n<p><img src=\"/9cf0a94b63138e1b800c5cd949c5e832/form-get-redirect.gif\" alt=\"form-get-redirect.gif\"></p>\n</div>\n<p>오늘은 간단하게 PRG에 대해서 기록해보았다.\n이제 <a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-2/dashboard\">스프링 MVC 2편 - 백엔드 웹 개발 활용 기술</a>도 빠른시일내에 완강해야겠다.</p>\n<p>전에 기록하지 못했던 부분들도 다시 복습할 때 필요한 부분은 기록하도록 해야겠다.</p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1/dashboard\">스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술</a></li>\n</ul>\n<h2 id=\"전체-소스코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\" aria-label=\"전체 소스코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 소스코드</h2>\n<ul>\n<li><a href=\"https://github.com/KwonCheulJin/springMVC-web-page\">https://github.com/KwonCheulJin/springMVC-web-page</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-prgpostredirectget-%EC%A0%81%EC%9A%A9-%EC%A0%84\">1. PRG(Post/Redirect/Get) 적용 전</a></li>\n<li><a href=\"#2-prgpostredirectget-%EC%A0%81%EC%9A%A9-%ED%9B%84\">2. PRG(Post/Redirect/Get) 적용 후</a></li>\n<li><a href=\"#reference\">Reference</a></li>\n<li><a href=\"#%EC%A0%84%EC%B2%B4-%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\">전체 소스코드</a></li>\n</ul>\n</div>","excerpt":"오늘은 인프런의 김영한님 스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술을 마무리하였다. 매일 1~2시간씩 끊어가면서 강의를 듣다보니 배울 때만 기억나고 다시 들을때는 전에 배웠던 내용이 잘 기억나지는 않는다. 시간내서 전체를 다시 한번 들어봐야겠다. 강의 내용 중 마지막 내용인 PRG(Post/Redirect/Get)에 대해서 글을 남긴다. 1. PRG(Post/Redirect/Get) 적용 전 상품을 등록하고 나서 아래의 경로로 이동하게 되었을 때의 문제점은 새로고침을 하게 되면 상품이 지속적으로 등록이 된다는 것이다.  form-post-redirectX.gif gif로 변환을 하다보니 해상도가 좋지는 않은데 상품ID가 새로고침 할 때 마다 올라가는 것을 확인 할 수 있다. 이렇게 마무리가 되면 사용자가 실수로 새로고침을 눌렀을 경우에 똑같은 상품이 계속 저장되게 된다. 그래서 이렇게 저장되지 않도록 해주는 방법이 PRG(Post/Redirect/Get)이다. 2. PRG(…","frontmatter":{"date":"October 05, 2021","title":"PRG (Post/Redirect/Get)","categories":"SpringMVC","author":"촬스","emoji":"😱"},"fields":{"slug":"/gatsby-springMVC-1/"}},"next":{"id":"38adf2af-03e9-56e8-9dca-5466232ff396","html":"<p>VCMS(Video Content Management System) 프로젝트를 진행하게 되어서\n이사님께서 Spring version 4로 만들어 주신 기본폴더를 이용해서 간단하게 추가해 진행을 해보았다.</p>\n<h2 id=\"1-파일업로드를-위한-code-classlanguage-textpomxmlcode-설정\" style=\"position:relative;\"><a href=\"#1-%ED%8C%8C%EC%9D%BC%EC%97%85%EB%A1%9C%EB%93%9C%EB%A5%BC-%EC%9C%84%ED%95%9C-code-classlanguage-textpomxmlcode-%EC%84%A4%EC%A0%95\" aria-label=\"1 파일업로드를 위한 code classlanguage textpomxmlcode 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 파일업로드를 위한 <code class=\"language-text\">pom.xml</code> 설정</h2>\n<ul>\n<li>fileupload에 필요한 pom.xml에 dependency를 추가하는 작업을 하였습니다.</li>\n</ul>\n<p><code class=\"language-text\">pom.xml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- 파일 업로드 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>commons-fileupload<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>commons-fileupload<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"2-code-classlanguage-textservlet-contextxmlcode에-code-classlanguage-textmultipartresolvercode-등록\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-textservlet-contextxmlcode%EC%97%90-code-classlanguage-textmultipartresolvercode-%EB%93%B1%EB%A1%9D\" aria-label=\"2 code classlanguage textservlet contextxmlcode에 code classlanguage textmultipartresolvercode 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">servlet-context.xml</code>에 <code class=\"language-text\">MultipartResolver</code> 등록</h2>\n<ul>\n<li>Multipart 지원 기능을 이용하려면 먼저 MultipartResolver를 스프링 설정 파일에 등록해 주어야 합니다</li>\n<li>MultipartResolver는 Multipart 형식으로 데이터가 전송된 경우, 해당 데이터를 스프링 MVC에서 사용할 수 있도록 변환해줍니다.</li>\n</ul>\n<p><code class=\"language-text\">servlet-context.xml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipartResolver<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.multipart.support.StandardServletMultipartResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"3-code-classlanguage-textwebxmlcode에-code-classlanguage-textmultipart-configcode-적용\" style=\"position:relative;\"><a href=\"#3-code-classlanguage-textwebxmlcode%EC%97%90-code-classlanguage-textmultipart-configcode-%EC%A0%81%EC%9A%A9\" aria-label=\"3 code classlanguage textwebxmlcode에 code classlanguage textmultipart configcode 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. <code class=\"language-text\">web.xml</code>에 <code class=\"language-text\">multipart-config</code> 적용</h2>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.servlet.DispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>contextConfigLocation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>\n      classpath:config/spring/servlet-context.xml\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>load-on-startup</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>load-on-startup</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>multipart-config</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>location</span><span class=\"token punctuation\">></span></span>/Users/chars/Documents/TestDir<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>location</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- 업로드 파일 저장되는 기본 경로 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>max-file-size</span><span class=\"token punctuation\">></span></span>20971520<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>max-file-size</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- 한파일: 1mb * 20 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>max-request-size</span><span class=\"token punctuation\">></span></span>41943040<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>max-request-size</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- 한번에 여러개올리는데 전체가 40mb --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>file-size-threshold</span><span class=\"token punctuation\">></span></span>20971520<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>file-size-threshold</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- 넘으면 temp에 넣고 업로드에 들어가지 않는다 : 20mb --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>multipart-config</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th>이름</th>\n<th>타입</th>\n<th>필수</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fileSizeThreshold</td>\n<td>int</td>\n<td>Optional</td>\n<td>업로드 파일을 임시로 저장할 때 크기 임계값을 지정합니다. 업로드 파일의 크기가 이 임계값보다 크면 디스크에 저장됩니다. 그렇지 않으면 파일이 메모리에 저장됩니다. 크기(바이트)입니다.</td>\n</tr>\n<tr>\n<td>location</td>\n<td>String</td>\n<td>Optional</td>\n<td>업로드 파일이 저장되는 디렉토리 지정</td>\n</tr>\n<tr>\n<td>maxFileSize</td>\n<td>long</td>\n<td>Optional</td>\n<td>업로드 파일의 최대 크기를 지정합니다. 크기(바이트)입니다.</td>\n</tr>\n<tr>\n<td>maxRequestSize</td>\n<td>long</td>\n<td>Optional</td>\n<td>요청의 최대 크기를 지정합니다(업로드 파일 및 기타 양식 데이터 모두 포함). 크기(바이트)입니다.</td>\n</tr>\n</tbody>\n</table>\n<p>위와 같이 설정을 해주면 됩니다.</p>\n<p>이렇게 설정하기 전에 여러 블로그를 참조해서 진행했었는데 저의 스프링 버전에 맞게 설정하는 것을 찾는 것도 쉽지 않다는 것을 느꼈습니다.</p>\n<h2 id=\"4-code-classlanguage-textfileuploadcontrollercode-생성\" style=\"position:relative;\"><a href=\"#4-code-classlanguage-textfileuploadcontrollercode-%EC%83%9D%EC%84%B1\" aria-label=\"4 code classlanguage textfileuploadcontrollercode 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. <code class=\"language-text\">FileUploadController</code> 생성</h2>\n<p><code class=\"language-text\">common.properties</code>에 file경로를 지정해 주었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## FilePath\nfile.path=/Users/chars/Documents/TestDir</code></pre></div>\n<p><code class=\"language-text\">FileUploadController</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>kyobobook<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Locale</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>UUID<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Value</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PropertySource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Model</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestParam</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>multipart<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MultipartFile</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>mvc<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RedirectAttributes</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/sample\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:config/properties/common.properties\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileUploadController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileUploadController</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 파일 저장할 위치</span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${file.path}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> file_Path<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 파일 폼 매핑</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/fileForm\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">fileForm</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Locale</span> locale<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileForm file.path={}\"</span><span class=\"token punctuation\">,</span> file_Path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"sample/upload\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 파일 등록 매핑</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/fileUpload\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">fileUpload</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">RedirectAttributes</span> redirectAttributes<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileUpload={}\"</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> uuid <span class=\"token operator\">=</span> UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// file upload to system</span>\n        <span class=\"token class-name\">File</span> converFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>file_Path<span class=\"token punctuation\">,</span> uuid <span class=\"token operator\">+</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileUpload converFile={}\"</span><span class=\"token punctuation\">,</span> converFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        file<span class=\"token punctuation\">.</span><span class=\"token function\">transferTo</span><span class=\"token punctuation\">(</span>converFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" is saved in server db\"</span><span class=\"token punctuation\">;</span>\n        redirectAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">addFlashAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileUpload={}\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"redirect:fileForm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>컨트롤러를 만들고 나서 김영한님의 스프링MVC 강의를 듣고있어서 <code class=\"language-text\">@RequestMapping</code>을 <code class=\"language-text\">@GetMapping</code>과 <code class=\"language-text\">@PostMapping</code>으로 명시적으로 지정해 주려고 하였으나 적용이 되지를 않아서 확인해 보니 <code class=\"language-text\">@GetMapping</code>과 <code class=\"language-text\">@PostMapping</code> 어노테이션은 Spring 5부터 가능하다는 것을 알게 되었습니다. 그래서 <code class=\"language-text\">@RequestMapping</code>안에 <code class=\"language-text\">method</code>로 명시하였고 <code class=\"language-text\">fileForm</code>은 <code class=\"language-text\">GET, POST</code>가 가능하게 해주었습니다.</p>\n<p><code class=\"language-text\">Hosting.kr 설정 페이지</code></p>\n<h2 id=\"5-code-classlanguage-textuploadjspcode-생성\" style=\"position:relative;\"><a href=\"#5-code-classlanguage-textuploadjspcode-%EC%83%9D%EC%84%B1\" aria-label=\"5 code classlanguage textuploadjspcode 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. <code class=\"language-text\">upload.jsp</code> 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Insert title here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileUpload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enctype</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipart/form-data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>컨트롤러의 경로에 맞춰서 설정해 주면 끝이납니다.</p>\n<p><img src=\"/80a52fcc67ad3e1f90940543499680df/file-upload.gif\" alt=\"file-upload.gif\"></p>\n<p>비록 컨트롤러 코드는 여러 블로그를 검색해서 가져온 코드인데 이곳저곳을 들르다 보니 출처를 가져오는 것을 깜빡하였네요.\n다음에는 출처도 잘 가져와서 링크를 걸어 두어야겠네요.\n이렇게 간단하게 파일업로드 하는 것을 하는데도 설정하는 곳에서 한참을 해매서 3-4시간 정도 걸린 것 같네요.\n이번에는 폴더에 저장하는 것으로 하였지만 다음번에는 스프링 부트 및 DB에 저장하는 것까지 해서 구현해서 글을 남겨보도록 해야겠네요.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%ED%8C%8C%EC%9D%BC%EC%97%85%EB%A1%9C%EB%93%9C%EB%A5%BC-%EC%9C%84%ED%95%9C-pomxml-%EC%84%A4%EC%A0%95\">1. 파일업로드를 위한 <code class=\"language-text\">pom.xml</code> 설정</a></li>\n<li><a href=\"#2-servlet-contextxml%EC%97%90-multipartresolver-%EB%93%B1%EB%A1%9D\">2. <code class=\"language-text\">servlet-context.xml</code>에 <code class=\"language-text\">MultipartResolver</code> 등록</a></li>\n<li><a href=\"#3-webxml%EC%97%90-multipart-config-%EC%A0%81%EC%9A%A9\">3. <code class=\"language-text\">web.xml</code>에 <code class=\"language-text\">multipart-config</code> 적용</a></li>\n<li><a href=\"#4-fileuploadcontroller-%EC%83%9D%EC%84%B1\">4. <code class=\"language-text\">FileUploadController</code> 생성</a></li>\n<li><a href=\"#5-uploadjsp-%EC%83%9D%EC%84%B1\">5. <code class=\"language-text\">upload.jsp</code> 생성</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 28, 2021","title":"Spring MVC를 이용한 간단한 파일업로드","categories":"SpringMVC","author":"촬스","emoji":"🦾"},"fields":{"slug":"/gatsby-java-til/"}},"prev":{"id":"b9f3653b-ac09-50dd-a295-4762100c0b3c","html":"<p>오늘은 회사에서 VCMS 프로토타입 개발 진행을 하게되어서 처음으로 AWS RDS MariaDB에 연동하는 작업을 진행하였다. DB 쿼리 작업을 수월하게 도와주는 Mybatis도 이용하였다.</p>\n<p>설정하는 과정 중에 겪었던 문제점을 잊지 않기 위해서 기록한다.</p>\n<h2 id=\"1-db-연동하기\" style=\"position:relative;\"><a href=\"#1-db-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0\" aria-label=\"1 db 연동하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DB 연동하기</h2>\n<ul>\n<li><code class=\"language-text\">application.properties</code>에서 DB 설정 및 Mybatis 설정을 해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\">#mariadb 설정</span>\nspring.datasource.driver<span class=\"token punctuation\">-</span>class<span class=\"token punctuation\">-</span>name=org.mariadb.jdbc.Driver\nspring.datasource.url=jdbc<span class=\"token punctuation\">:</span>mariadb<span class=\"token punctuation\">:</span>//aws rds 주소<span class=\"token punctuation\">:</span>3306/db이름\nspring.datasource.username=username\nspring.datasource.password=password\n\n<span class=\"token comment\"># mapper.xml 위치 지정</span>\nmybatis.mapper<span class=\"token punctuation\">-</span>locations<span class=\"token punctuation\">:</span>classpath<span class=\"token punctuation\">:</span>mappers/<span class=\"token important\">*.xml</span>\n<span class=\"token comment\"># model 프로퍼티 camel case 설정</span>\nmybatis.configuration.map<span class=\"token punctuation\">-</span>underscore<span class=\"token punctuation\">-</span>to<span class=\"token punctuation\">-</span>camel<span class=\"token punctuation\">-</span>case=true\n<span class=\"token comment\"># 패키지 명을 생략할 수 있도록 alias 설정</span>\nmybatis.type<span class=\"token punctuation\">-</span>aliases<span class=\"token punctuation\">-</span>package.com.prototype.domain.entity\n<span class=\"token comment\"># mapper 로그레벨 설정</span>\nlogging.level.com.prototype.domain.repository=TRACE</code></pre></div>\n<ul>\n<li>내가 사용에 필요한 부분을 설정해주었다.</li>\n</ul>\n<h2 id=\"2-db-연동-test\" style=\"position:relative;\"><a href=\"#2-db-%EC%97%B0%EB%8F%99-test\" aria-label=\"2 db 연동 test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. DB 연동 TEST</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MariadbConnectionTest</span> <span class=\"token punctuation\">{</span>\n\n <span class=\"token comment\">// MySQL Connector 의 클래스. DB 연결 드라이버 정의</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> DRIVER <span class=\"token operator\">=</span> <span class=\"token string\">\"org.mariadb.jdbc.Driver\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// DB 경로</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> URL <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mariadb://aws rds 주소:3306/db이름\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> USER <span class=\"token operator\">=</span> <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> PASSWORD <span class=\"token operator\">=</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// DBMS에게 DB 연결 드라이버의 위치를 알려주기 위한 메소드</span>\n        <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>DRIVER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Connection</span> connection <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">,</span> USER<span class=\"token punctuation\">,</span> PASSWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>test를 통해서 db와 연결되는지 확인을 한다.</li>\n</ul>\n<h2 id=\"3-mybatis-사용을-위한-entity--repository-class-추가\" style=\"position:relative;\"><a href=\"#3-mybatis-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-entity--repository-class-%EC%B6%94%EA%B0%80\" aria-label=\"3 mybatis 사용을 위한 entity  repository class 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Mybatis 사용을 위한 Entity / Repository class 추가</h2>\n<p><code class=\"language-text\">main > java > com > prototype > domain > entity > Member</code></p>\n<h3 id=\"member\" style=\"position:relative;\"><a href=\"#member\" aria-label=\"member permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Member</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Member</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> no<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> grade<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> department<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> email<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> phoneNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> dateOfSignUp<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>클래스 레벨에서 <code class=\"language-text\">@Data</code> 어노테이션을 붙여주면, 모든 필드를 대상으로 접근자와 설정자가 자동으로 생성되고, <code class=\"language-text\">final</code> 또는 <code class=\"language-text\">@NonNull</code> 필드 값을 파라미터로 받는 생성자가 만들어지며, <code class=\"language-text\">toStirng</code>, <code class=\"language-text\">equals</code>, <code class=\"language-text\">hashCode</code> 메소드가 자동으로 만들어진다.</li>\n</ul>\n<p><code class=\"language-text\">main > java > com > prototype > domain > repository > MemberRepository</code></p>\n<h3 id=\"memberrepository\" style=\"position:relative;\"><a href=\"#memberrepository\" aria-label=\"memberrepository permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MemberRepository</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Mapper</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">MemberRepository</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">allMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">@Mapper</code>는 MyBatis의 mappers를 위한 marker interface로 사용</li>\n</ul>\n<h2 id=\"4-mybatis-code-classlanguage-textmapperxmlcode-설정\" style=\"position:relative;\"><a href=\"#4-mybatis-code-classlanguage-textmapperxmlcode-%EC%84%A4%EC%A0%95\" aria-label=\"4 mybatis code classlanguage textmapperxmlcode 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Mybatis <code class=\"language-text\">mapper.xml</code> 설정</h2>\n<p><code class=\"language-text\">main > resources > mappers > mapper.xml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">mapper</span>\n        <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span> <span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.prototype.domain.repository.MemberRepository<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>allMember<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Member<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        SELECT * FROM member\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">네임스페이스(Namespaces)</code>가 이전버전에서는 사실 선택사항이었다. 하지만 이제는 패키지경로를 포함한 전체 이름을 가진 구문을 구분하기 위해 필수로 사용해야 한다.\n<code class=\"language-text\">네임스페이스</code>는 인터페이스 바인딩을 가능하게 한다. 네임스페이스을 사용하고 자바 패키지의 네임스페이스을 두면 코드가 깔끔해지고 마이바티스의 사용성이 크게 향상될 것이다.</p>\n</blockquote>\n<ul>\n<li><code class=\"language-text\">mybatis.type-aliases-package.com.prototype.domain.entity</code></li>\n<li>패키지 명을 생략할 수 있도록 alias 설정하여서 <code class=\"language-text\">resultType</code>에 <code class=\"language-text\">Member</code> 짧게 넣을 수 있다.</li>\n</ul>\n<h2 id=\"5-db에서-가져온-데이터를-json형태로-보여주기\" style=\"position:relative;\"><a href=\"#5-db%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-json%ED%98%95%ED%83%9C%EB%A1%9C-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B8%B0\" aria-label=\"5 db에서 가져온 데이터를 json형태로 보여주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. DB에서 가져온 데이터를 JSON형태로 보여주기</h2>\n<p><code class=\"language-text\">main > java > com > prototype > domain > controller > MemberController</code></p>\n<h3 id=\"membercontroller\" style=\"position:relative;\"><a href=\"#membercontroller\" aria-label=\"membercontroller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MemberController</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemeberController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">MemberRepository</span> memberRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/member\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">allMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"allmember = {}\"</span><span class=\"token punctuation\">,</span> memberRepository<span class=\"token punctuation\">.</span><span class=\"token function\">allMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> memberRepository<span class=\"token punctuation\">.</span><span class=\"token function\">allMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">@Slf4j</code>는 log를 출력하기 위한 어노테이션</li>\n<li><code class=\"language-text\">@RestController</code>는 Spring MVC Controlle에 <code class=\"language-text\">@ResponseBody</code>가 추가된 것이다. <code class=\"language-text\">RestController</code>의 주용도는 <code class=\"language-text\">Json</code> 형태로 객체 데이터를 반환하는 것이다.</li>\n<li><code class=\"language-text\">@RequesMapping</code>은 요청에 대해 어떤 Controller, 어떤 메소드가 처리할지를 맵핑하기 위한 어노테이션(class위에 선언시 공통 url을 선언할 수 있다)</li>\n<li><code class=\"language-text\">@Autowired</code>은 필요한 의존 객체의 <code class=\"language-text\">타입</code>에 해당하는 빈을 찾아 자동 주입한다.</li>\n<li><code class=\"language-text\">@GetMapping</code>은 <code class=\"language-text\">@GetMapping : @RequestMapping(method = RequestMethod.GET)</code> 의 축약형</li>\n</ul>\n<p>오늘 경험한 것을 다시 한번 정리해보니깐 조금 정리가 되는 듯하다. 회사에서 연동시에 계속 에러가 발생해서 한참을 검색해도 해결이 되지않았는데 가장 큰 실수를 한 부분이 db 설정 부분에서 밑줄친 부분을 누락해서 생기는 에러였다.</p>\n<p align =\"center\"> \nspring.datasource.url=jdbc:mariadb://aws rds 주소<b><u>:3306/db이름</u></b>\n</p>\n<p>다시는 까먹지 않을 정도의 임팩트였다.</p>\n<p>조금씩 느리더라도 오늘같이 배워가면서 지속적으로 성장 할 수 있게 노력하자!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-db-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0\">1. DB 연동하기</a></p>\n</li>\n<li>\n<p><a href=\"#2-db-%EC%97%B0%EB%8F%99-test\">2. DB 연동 TEST</a></p>\n</li>\n<li>\n<p><a href=\"#3-mybatis-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-entity--repository-class-%EC%B6%94%EA%B0%80\">3. Mybatis 사용을 위한 Entity / Repository class 추가</a></p>\n<ul>\n<li><a href=\"#member\">Member</a></li>\n<li><a href=\"#memberrepository\">MemberRepository</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-mybatis-mapperxml-%EC%84%A4%EC%A0%95\">4. Mybatis <code class=\"language-text\">mapper.xml</code> 설정</a></p>\n</li>\n<li>\n<p><a href=\"#5-db%EC%97%90%EC%84%9C-%EA%B0%80%EC%A0%B8%EC%98%A8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-json%ED%98%95%ED%83%9C%EB%A1%9C-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B8%B0\">5. DB에서 가져온 데이터를 JSON형태로 보여주기</a></p>\n<ul>\n<li><a href=\"#membercontroller\">MemberController</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"October 06, 2021","title":"Spring Boot + Mybatis + MariaDB 연결하기","categories":"SpringMVC","author":"촬스","emoji":"😓"},"fields":{"slug":"/gatsby-springMVC-2/"}},"site":{"siteMetadata":{"siteUrl":"https://www.devkcj.com","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/gatsby-springMVC-1/","nextSlug":"/gatsby-java-til/","prevSlug":"/gatsby-springMVC-2/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}